<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!--

    Copyright 2017 Anton Johansson

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.viskan</groupId>
        <artifactId>parent</artifactId>
        <version>5</version>
    </parent>
    <groupId>com.anton-johansson</groupId>
    <artifactId>elasticsearch-shell</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Anton Johansson :: Elasticsearch Shell</name>
    <description>Provides a shell for managing Elasticsearch instances.</description>
    <url>https://github.com/anton-johansson/elasticsearch-shell</url>

    <organization />

    <developers>
        <developer>
            <id>anton-johansson</id>
            <name>Anton Johansson</name>
            <email>antoon.johansson@gmail.com</email>
        </developer>
    </developers>

    <issueManagement>
        <url>https://github.com/anton-johansson/elasticsearch-shell/issues</url>
        <system>GitHub Issues</system>
    </issueManagement>

    <scm>
        <url>https://github.com/anton-johansson/elasticsearch-shell</url>
        <connection>scm:git:git://github.com/anton-johansson/elasticsearch-shell.git</connection>
        <developerConnection>scm:git:git@github.com:anton-johansson/elasticsearch-shell.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <!-- Build -->
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.javadoc.skip>true</maven.javadoc.skip>

        <!-- Dependencies -->
        <commons-lang3.version>3.5</commons-lang3.version>
        <cxf.version>3.1.11</cxf.version>
        <jackson.version>2.8.8</jackson.version>
        <junit.version>4.12</junit.version>
        <mockito.version>2.7.22</mockito.version>
        <mockserver-netty.version>3.10.5</mockserver-netty.version>
        <powermock.version>1.7.0RC2</powermock.version>
        <spring-shell.version>1.2.0.RELEASE</spring-shell.version>
        <spring-test.version>4.3.8.RELEASE</spring-test.version>

        <!-- Plug-in dependencies -->
        <cobertura-maven-plugin.version>2.7</cobertura-maven-plugin.version>
        <jdeb.version>1.4</jdeb.version>
        <license-maven-plugin.version>3.0</license-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-client</artifactId>
            <version>${cxf.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.shell</groupId>
            <artifactId>spring-shell</artifactId>
            <version>${spring-shell.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <version>${mockserver-netty.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring-test.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                    <header>license-header.txt</header>
                    <excludes>
                        <exclude>README.md</exclude>
                        <exclude>LICENSE</exclude>
                        <exclude>.checkstyle</exclude>
                        <exclude>src/deb/**</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>check-licenses</id>
                        <phase>package</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                            <overWriteReleases>true</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${cobertura-maven-plugin.version}</version>
                <configuration>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <check />
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <version>${jdeb.version}</version>
                <configuration>
                    <dataSet>
                        <data>
                            <type>template</type>
                            <paths>
                                <path>var/lib/${project.artifactId}</path>
                            </paths>
                            <mapper>
                                <type>perm</type>
                            </mapper>
                        </data>
                        <data>
                            <src>${basedir}/LICENSE</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/${project.artifactId}/doc</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${basedir}/src/deb/run.sh</src>
                            <dst>${project.artifactId}</dst>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/bin</prefix>
                                <filemode>755</filemode>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.build.directory}/${project.build.finalName}.jar</src>
                            <dst>${project.artifactId}.jar</dst>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/${project.artifactId}/bin</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.build.directory}/lib</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <prefix>/var/lib/${project.artifactId}/bin</prefix>
                            </mapper>
                        </data>
                    </dataSet>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>